version: "3.8"

volumes:
  #   rabbitmq_data:
  pgdata:
  kongadata:

networks:
  kong-net:
    driver: bridge

services:
  # ##################################
  # Report: The Report microservice
  # ##################################
  report:
    build:
      context: ./
      dockerfile: report.Dockerfile
    image: jingrongho2019/report:ecp
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/report
      PYTHONUNBUFFERED: 1
    ports:
      - "5000:5000"

  ###################################
  # Frontend: The Frontend microservice
  ###################################
  # frontend:
  #   stdin_open: true
  #   container_name: frontend
  #   build:
  #     context: ./
  #     dockerfile: frontend.Dockerfile
  #   image: petrastan/frontend:ecp
  #   restart: always
  #   volumes:
  #     - '.:/frontend/app'
  #     - '/frontend/app/node_modules'
  #   ports:
  #     - 3000:3000

  ###################################
  # Users: The Users microservice
  ###################################
  # users:
  #   build:
  #     context: ./
  #     dockerfile: users.Dockerfile
  #   image: petrastan/users:ecp
  #   restart: always
  #   networks:
  #     - kong-net
  #   environment:
  #     dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/users
  #     PYTHONUNBUFFERED: 1
  #   ports:
  #     - "5001:5001"

  #####################################
  # Facility: The Facility microservice
  #####################################
  facility:
    build:
      context: ./
      dockerfile: facilities.Dockerfile
    image: petrastan/facilities:ecp
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/facility
      PYTHONUNBUFFERED: 1
    ports:
      - "5002:5002"

  ###################################
  # Booking: The Booking microservice
  ###################################
  booking:
    build:
      context: ./
      dockerfile: booking.Dockerfile
    image: petrastan/booking:ecp
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/booking
      PYTHONUNBUFFERED: 1
    ports:
      - "5003:5003"

  ###################################
  # Payment: The Payment microservice
  ###################################
  payment:
    build:
      context: ./
      dockerfile: payment.Dockerfile
    image: petrastan/payment:ecp
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/payment
      PYTHONUNBUFFERED: 1
    ports:
      - "5004:5004"

  #######################################
  # Postgres: The database used by Kong
  #######################################
  # kong-database:
  #   image: postgres:9.6
  #   restart: always
  #   networks:
  #     - kong-net
  #   environment:
  #     POSTGRES_DB: kong
  #     POSTGRES_USER: kong
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "kong"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  # kong-migration:
  #   image: kong:2.0.4
  #   command: "kong migrations bootstrap"
  #   restart: on-failure
  #   networks:
  #     - kong-net
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-database
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD: password
  #   depends_on:
  #     - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  # kong:
  #   image: kong:2.0.4
  #   restart: always
  #   networks:
  #     - kong-net
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-database
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD: password
  #     KONG_PROXY_LISTEN: 0.0.0.0:8000
  #     KONG_ADMIN_LISTEN: 0.0.0.0:8001
  #   depends_on:
  #     - kong-migration
  #   ports:
  #     - "8000:8000"

  #######################################
  # Konga: Kong GUI
  #######################################
  # konga:
  #   image: pantsel/konga
  #   restart: always
  #   networks:
  #     - kong-net
  #   environment:
  #     DB_ADAPTER: postgres
  #     DB_HOST: kong-database
  #     DB_USER: kong
  #     DB_PASSWORD: password
  #     DB_DATABASE: konga_db
  #   depends_on:
  #     - kong
  #   ports:
  #     - "1337:1337"
  #   volumes:
  #     - kongadata:/app/kongadata

  #######################################
  # Complex Microservice: book_a_facility
  #######################################
  book_facility:
    build:
      context: ./
      dockerfile: bookFacility.Dockerfile
    image: petrastan/book_facility:ecp
    restart: always
    networks:
      - kong-net
    depends_on:
      - facility
      - booking
      - payment
    environment:
      PYTHONBUFFERED: 1
      booking_URL: http://booking:5003/createBooking/
      payment_URL: http://payment:5004/makePayment/

    ports:
      - "5010:5010"
